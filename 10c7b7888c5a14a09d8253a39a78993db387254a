{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "76cf7961_01dea30f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-07T03:15:11Z",
      "side": 1,
      "message": "Hi Alexander, I\u0027ve added some more thoughts. Please tell me where I might be off track though, I don\u0027t want to have you flip-flopping with the implementation based on lack of understanding on my part.",
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f88f6a2_8c6d1563",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-07T03:15:11Z",
      "side": 1,
      "message": "Perhaps we can add a `docs/` directory and put this at `docs/mux-support.md`",
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2b6f459_1e019396",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-07T09:41:30Z",
      "side": 1,
      "message": "yes üëç",
      "parentUuid": "7f88f6a2_8c6d1563",
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "513f4e1c_f7bf8e33",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-07T03:15:11Z",
      "side": 1,
      "message": "Can you please provide the full `busctl list` and `busctl tree` output here for all relevant connections? That would be very useful context to orient people (me).",
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd4fca28_9de3a369",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-07T09:41:30Z",
      "side": 1,
      "message": "Added the busctl tree and full busctl introspect for one console. It\u0027s just the same with multiple consoles since they each have their own dbus name.",
      "parentUuid": "513f4e1c_f7bf8e33",
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7bb1f9e_ae5998a3",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-07T03:15:11Z",
      "side": 1,
      "message": "I have a vague feeling that this is too abstract. Are you proposing that this interface is always exposed regardless of whether a UART mux is present or not? If it\u0027s not exposed when a mux isn\u0027t present, then I think it should be clear in the name that the interface relates to the mux, e.g. `xyz.openbmc_project.Console.Mux`. If it is always exposed, what\u0027s its behaviour when a mux isn\u0027t present?\n\nSeparately, the interface must first be specified in `phosphor-dbus-interfaces` before it\u0027s implemented here, to make sure it\u0027s properly debated. You can find the other interfaces specified there also:\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/tree/master/yaml/xyz/openbmc_project/Console",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 54,
        "endChar": 71
      },
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6026b091_3983fe6c",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-07T09:41:30Z",
      "side": 1,
      "message": "The interface can always be present, independent of the existence of a mux.\n\nThere is always an active console, and if there is only one console, that one cannot be deactivated, since there is only \u0027Activate\u0027 method without arguments.\n\nSo the existence of that interface is harmless and other projects do not have to handle the edge-case where it\u0027s there or not there.\n\nI can try to get something merged in phosphor-dbus-interfaces and update here,  keeping this as unresolved for now.",
      "parentUuid": "b7bb1f9e_ae5998a3",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 54,
        "endChar": 71
      },
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a15701f1_eb025819",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "Let\u0027s continue this discussion on the [PDI patch](https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/71878).",
      "parentUuid": "6026b091_3983fe6c",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 54,
        "endChar": 71
      },
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69e4f7d5_360a4d77",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-07T03:15:11Z",
      "side": 1,
      "message": "Bit of a nit, but IMO this diagram should be easier to interpret. It feels like it has unnecessary cross-overs. In README.md I have the diagram going from the network on the left to the UART on the right, and I think we can try to do the same here?\n\nI took some time to diagram my understanding. What are your thoughts on this?\n\n```\n                                          +--------------------+                                           \n                                          | uart1.conf         |                                           \n                                          +--------------------+                                           \n                                          | console-id \u003d host1 |                                           \n                                          | mux-index \u003d 0      |                                           \n                                          +----+---------------+                                           \n                                               |                                                           \n                                               |                                                           \n                                               |                                                           \n                                               |                                                           \n                                          +----+----+                                 +-----+     +-------+\n                                          |         |                                 |     |     |       |\n                                          |         |     +-------+     +-------+     |     +-----+ UART1 |\n+-----------------------------------+     |         |     |       |     |       |     |     |     |       |\n| xyz.openbmc_project.Console.host1 +-----+         +-----+ ttyS0 +-----+ UART0 +-----+     |     +-------+\n+-----------------------------------+     |         |     |       |     |       |     |     |              \n                                          |  obmc   |     +-------+     +-------+     |     |              \n                                          | console |                                 | MUX |              \n                                          | server  |                   +-------+     |     |              \n+-----------------------------------+     |         |                   |       |     |     |              \n| xyz.openbmc_project.Console.host2 +-----+         +-------------------+ GPIO  +-----+     |     +-------+\n+-----------------------------------+     |         |                   |       |     |     |     |       |\n                                          |         |                   +-------+     |     +-----+ UART2 |\n                                          |         |                                 |     |     |       |\n                                          +----+----+                                 +-----+     +-------+\n                                               |                                                           \n                                               |                                                           \n                                               |                                                           \n                                               |                                                           \n                                          +----+---------------+                                           \n                                          | uart2.conf         |                                           \n                                          +--------------------+                                           \n                                          | console-id \u003d host2 |                                           \n                                          | mux-index \u003d 1      |                                           \n                                          +--------------------+                                           \n```\n\nHowever, see discussion on the example configs about whether we should split them into separate files, I might be back-tracking on that idea (sorry - but I hope that motivates discussion instead of immediately taking the suggestion and running with an implementation).",
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee27a46e_e36bb150",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-07T09:41:30Z",
      "side": 1,
      "message": "Thanks for taking your time to make the diagram. It looks better and more detailed. \nI can update the markdown to use this diagram üëç",
      "parentUuid": "69e4f7d5_360a4d77",
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ecabc29_aba89ebc",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-07T03:15:11Z",
      "side": 1,
      "message": "Can you please add some discussion of how we configure obmc-console for this hardware setup? I think we need to unpack answers to questions such as:\n\n1. What configuration files are needed?\n2. Where should they be placed?\n3. How does the UART mux feature compose with e.g. the concurrent console servers feature?",
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2df744e5_cf9e8453",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-13T08:51:28Z",
      "side": 1,
      "message": "1. still in discussion, depending on the fate of iniparser in obmc-console.\n2. same as before, can place them in the filesystem.\n3. why would it not compose?\n   From what i\u0027ve seen in meson.build it has to do with configuration files.\n   Is there anything that feature does at runtime?",
      "parentUuid": "6ecabc29_aba89ebc",
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec529e61_d5ec781b",
        "filename": "MUX-SUPPORT.md",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-14T04:47:46Z",
      "side": 1,
      "message": "My questions here really reflect how I\u0027m treating this documentation: I\u0027m using it as a specification for how the implementation should behave, not the other way around.\n\nI don\u0027t want to have to reverse-engineer your intentions out of the implementation details of what at one point was a 3000 line patch. Please try to consider your reviewers here.\n\nI do think it would be appropriate to write a design document, as mentioned above.",
      "parentUuid": "2df744e5_cf9e8453",
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d71ed2b9_d36ace9e",
        "filename": "conf/example/muxed-uart/server-uart-muxed-console1-example.conf",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-07T03:15:11Z",
      "side": 1,
      "message": "I\u0027m a bit wary of `mux-gpio-N` as a concept. I think my ideal approach would be to have a `mux-index` property, which can take an integer value, and then somewhere (maybe not here?) we specify `mux-gpios` which takes one or more GPIO names to look up. The order of GPIOs listed in `mux-gpios` forms the LSB-first bit representation of an N-bit number that bounds the value of `mux-index`. This is inspired by the `i2c-mux-gpio` devicetree binding:\n\nhttps://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/devicetree/bindings/i2c/i2c-mux-gpio.yaml?h\u003dv6.10-rc2#n32\n\nI don\u0027t think `mux-gpios` should be specified in the config for a given console, as it would then be duplicated (and need to be consistent) across console configs. Really it describes something associated directly with the mux, not the mux\u0027s downstream ports. Possibly I\u0027m flip-flopping here, but do we go back to a single config file with sections? Doesn\u0027t feel great to require yet-another-file to solve the where-do-we-represent-this problem (in my defense I was trying to prompt some discussions last time before you implemented multi-file scheme, but you\u0027ve already implemented it üòÑ)",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 3,
        "endChar": 20
      },
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1440e8b0_19816f9c",
        "filename": "conf/example/muxed-uart/server-uart-muxed-console1-example.conf",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-07T09:41:30Z",
      "side": 1,
      "message": "If we start with sections it may get overcomplicated and the parser would have to be modified. There may need to be an additional level of structure to the \u0027struct config\u0027 to support sections along with the memory-management to ensure everything properly allocated and freed. \n\nMaybe something like\n\nmeta-openembedded/meta-oe/recipes-support/iniparser/iniparser_4.1.bb\n\nwould make sense to at least have a standard format and then be able to use some standard dependency instead of hand-coding a parser to support sections. \n\nFor the mux config, we can make it similar as for the i2c-mux-gpio dt binding like you suggested. It will be more familiar to developers who already worked with that.\n\nFor the multi-section config file, i can investigate if the \u0027iniparser\u0027 dependency would be suitable.",
      "parentUuid": "d71ed2b9_d36ace9e",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 3,
        "endChar": 20
      },
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43700926_8bfaf273",
        "filename": "conf/example/muxed-uart/server-uart-muxed-console1-example.conf",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "\u003e Maybe something like\n\u003e\n\u003e meta-openembedded/meta-oe/recipes-support/iniparser/iniparser_4.1.bb\n\u003e\n\u003e would make sense to at least have a standard format and then be able to use some standard dependency instead of hand-coding a parser to support sections.\n\nI\u0027m okay if we add something more conventional. We\u0027ll need consensus from Jeremy though, and I fear it will lead to a bit of a cascade of work. Configuring obmc-console is already tricky, and I\u0027m a little concerned we\u0027d only make that worse with the conversion.\n\nIf we were to change I\u0027d like to make sure documentation for the new config schema is part of that effort. The project really suffers from a lack of clear documentation there, which is compounded by some of the complexity I\u0027ve already added with the concurrent consoles support.\n\n\u003e For the mux config, we can make it similar as for the i2c-mux-gpio dt binding like you suggested. It will be more familiar to developers who already worked with that.\n\nThanks. Familiarity is helpful, but I think the more important aspect is we can lean on prior art and the support of others having already thought about the problem. It might be helpful to link to that i2c gpio mux binding document in the documentation for the new properties.",
      "parentUuid": "1440e8b0_19816f9c",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 3,
        "endChar": 20
      },
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff909925_bc628858",
        "filename": "conf/example/muxed-uart/server-uart-muxed-console1-example.conf",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-13T08:51:28Z",
      "side": 1,
      "message": "Why would the configuration be more tricky? \n\nEverything i was proposing in terms of configuration should be backwards compatible to the old config. If we use sections or multiple configuration files,\nthe config for a single console can probably stay the same.\n\nIt would be cleaner to also have a section in case of a single console, but it\u0027s not necessary. iniparser can give better error messages on syntax errors in the config file, so it makes it easier for people to configure.",
      "parentUuid": "43700926_8bfaf273",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 3,
        "endChar": 20
      },
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f96ae522_d5068352",
        "filename": "conf/example/muxed-uart/server-uart-muxed-console1-example.conf",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-14T04:47:46Z",
      "side": 1,
      "message": "\u003e Why would the configuration be more tricky?\n\nWell, so long as what we\u0027re already accepting in the custom config parser isn\u0027t less strict than what\u0027s allowed by an INI parser, then it should be fine. I just hadn\u0027t convinced myself that was the case.",
      "parentUuid": "ff909925_bc628858",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 3,
        "endChar": 20
      },
      "revId": "10c7b7888c5a14a09d8253a39a78993db387254a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}