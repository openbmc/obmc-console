{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "513a780d_360dbecc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2025-01-16T22:58:22Z",
      "side": 1,
      "message": "This change is intended to go together with a corresponding recipe change: https://gerrit.openbmc.org/c/openbmc/openbmc/+/77288",
      "revId": "84c9935b55e3f5057f95dfc2f93569c543d33e03",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76a41491_3d41674c",
        "filename": "CHANGELOG.md",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-17T05:08:34Z",
      "side": 1,
      "message": "Please remove this addition",
      "range": {
        "startLine": 84,
        "startChar": 9,
        "endLine": 84,
        "endChar": 18
      },
      "revId": "84c9935b55e3f5057f95dfc2f93569c543d33e03",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dc754a7_7a64efdd",
        "filename": "CHANGELOG.md",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2025-01-16T22:58:22Z",
      "side": 1,
      "message": "The build failure was in: commit_spelling \u003e markdownlint:\nCHANGELOG.md:88 MD024/no-duplicate-heading Multiple headings with the same content [Context: \"Added\"]",
      "revId": "84c9935b55e3f5057f95dfc2f93569c543d33e03",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21e6a371_6573b301",
        "filename": "CHANGELOG.md",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-01-17T04:44:29Z",
      "side": 1,
      "message": "codespell-dictionary - misspelling count \u003e\u003e /tmp/tmp.2qs79QlQ3p:10: compatability \u003d\u003d\u003e compatibility\n/tmp/tmp.2qs79QlQ3p:33: configuratons \u003d\u003d\u003e configurations\n2\ngeneric-dictionary - misspelling count \u003e\u003e /tmp/tmp.2qs79QlQ3p:10: compatability \u003d\u003d\u003e compatibility\n/tmp/tmp.2qs79QlQ3p:33: configuratons \u003d\u003d\u003e configurations\n2",
      "parentUuid": "9dc754a7_7a64efdd",
      "revId": "84c9935b55e3f5057f95dfc2f93569c543d33e03",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c178836_7673c620",
        "filename": "conf/obmc-console-ssh@.service.openssh-in",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-17T05:08:34Z",
      "side": 1,
      "message": "giving this an extension like `.openssh-in` feels like a bit of a hack. How about we rearrange the directories so we have:\n\n- `conf/dropbear/`\n- `conf/openssh/`\n\nstick the files in there with their normal names, and fix the build system?",
      "revId": "84c9935b55e3f5057f95dfc2f93569c543d33e03",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "964a7420_d7aba8d1",
        "filename": "conf/obmc-console-ssh@.service.openssh-in",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-01-17T15:42:43Z",
      "side": 1,
      "message": "Do we really want the same default environment as the top-level ssh daemon?",
      "range": {
        "startLine": 9,
        "startChar": 17,
        "endLine": 9,
        "endChar": 33
      },
      "revId": "84c9935b55e3f5057f95dfc2f93569c543d33e03",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9358107e_cdb551bc",
        "filename": "conf/obmc-console-ssh@.service.openssh-in",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-17T05:08:34Z",
      "side": 1,
      "message": "I think I prefer we put this under e.g. `/etc/obmc-console/ssh`. The OS integration of OpenSSH doesn\u0027t have any business with these particular config files.\n\nI\u0027m also not a huge fan of how the file is named. Perhaps `sshd.%i.conf`",
      "range": {
        "startLine": 10,
        "startChar": 40,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "84c9935b55e3f5057f95dfc2f93569c543d33e03",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6962711d_d2c5ea2a",
        "filename": "conf/obmc-console-ssh@.service.openssh-in",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-01-17T15:42:43Z",
      "side": 1,
      "message": "Why aren\u0027t we using a .socket file rather than launching a long-running daemon?",
      "revId": "84c9935b55e3f5057f95dfc2f93569c543d33e03",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4742a1af_37944d2f",
        "filename": "conf/sshd_config_port_2200",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-17T05:08:34Z",
      "side": 1,
      "message": "Put this under `conf/openssh` as well?",
      "revId": "84c9935b55e3f5057f95dfc2f93569c543d33e03",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b97ee403_65e82ca0",
        "filename": "conf/sshd_config_port_2200",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-01-17T15:42:43Z",
      "side": 1,
      "message": "Since we have a convention here already can we please use `CONSOLE_CLIENT` to generate these?  We already have that variable, which enables multiple obmc-console services, and is leveraged by multiple meta-layers.  Only supporting 2200 is only halfway enabling the feature.\n\nOh... this is in obmc-console and not in openbmc/openbmc.  We probably have some additional work to do at the OS level then to fully integrate this feature.",
      "range": {
        "startLine": 6,
        "startChar": 70,
        "endLine": 6,
        "endChar": 74
      },
      "revId": "84c9935b55e3f5057f95dfc2f93569c543d33e03",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}