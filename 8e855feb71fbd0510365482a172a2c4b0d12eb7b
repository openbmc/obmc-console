{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f435fbfc_60da96b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-03-28T00:38:33Z",
      "side": 1,
      "message": "Looks good in general, just a few comments on implementation details.",
      "revId": "8e855feb71fbd0510365482a172a2c4b0d12eb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abc6504d_0df6e7af",
        "filename": "console-server.c",
        "patchSetId": 9
      },
      "lineNbr": 843,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-03-28T00:38:33Z",
      "side": 1,
      "message": "this will disappear on NDEBUG; we probably want this to be checked at configuration time.",
      "revId": "8e855feb71fbd0510365482a172a2c4b0d12eb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75f8073c_d5101c71",
        "filename": "console-server.c",
        "patchSetId": 9
      },
      "lineNbr": 843,
      "author": {
        "id": 1001299
      },
      "writtenOn": "2024-03-28T15:45:25Z",
      "side": 1,
      "message": "What does configuration time mean? This ring buffer size is assigned at run time. There is no way to check this at compile time with static assert.",
      "parentUuid": "abc6504d_0df6e7af",
      "revId": "8e855feb71fbd0510365482a172a2c4b0d12eb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1481c25d_a9a676d8",
        "filename": "console-server.c",
        "patchSetId": 9
      },
      "lineNbr": 912,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-03-28T00:38:33Z",
      "side": 1,
      "message": "Super minor, but can you keep the reverse-christmas-tree formatting here?",
      "revId": "8e855feb71fbd0510365482a172a2c4b0d12eb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a582ea0c_4d8e1f11",
        "filename": "console-server.c",
        "patchSetId": 9
      },
      "lineNbr": 912,
      "author": {
        "id": 1001299
      },
      "writtenOn": "2024-03-28T15:45:25Z",
      "side": 1,
      "message": "Not perfect but done. Unless you prefer to touch unrelated lines here to make the tree looks perfect.",
      "parentUuid": "1481c25d_a9a676d8",
      "revId": "8e855feb71fbd0510365482a172a2c4b0d12eb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e337687_13afe55c",
        "filename": "console-server.c",
        "patchSetId": 9
      },
      "lineNbr": 958,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-03-28T00:38:33Z",
      "side": 1,
      "message": "This logic seems a bit backwards; if ringbuffer-size is not specified, you parse anyway, then conditionally ignore the error.\n\nCould you flip this to make the parse conditional instead? Just set the default beforehand.",
      "revId": "8e855feb71fbd0510365482a172a2c4b0d12eb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "158f58e0_44434da1",
        "filename": "console-server.c",
        "patchSetId": 9
      },
      "lineNbr": 958,
      "author": {
        "id": 1001299
      },
      "writtenOn": "2024-03-28T15:45:25Z",
      "side": 1,
      "message": "Updated. In order to achieve this. This code will be updated back to its original form. I think we should pick one coding style and not make changes any more. I\u0027m starting to loop the ways of writing these lines of codes.\n\nIn the updated version, assigning the default value again inside the if-condition is necessary because it\u0027s weird to guarantee that the pointer value is not touched when rc returns non-zero errors despite that\u0027s how this is currently implemented. From my understanding, without loss of generality, when rc is non-zero, that pointer value should be undefined behavior.\n\nWhat\u0027s your thoughts?",
      "parentUuid": "3e337687_13afe55c",
      "revId": "8e855feb71fbd0510365482a172a2c4b0d12eb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}