{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1e6fec75_04b7a289",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "Hi Alexander, I\u0027ve given a CR-1 as I don\u0027t think we\u0027ve yet got consensus on some parts and I have a few more requests.",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9855d33_13251e59",
        "filename": "README.md",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "Given we\u0027re writing markdown can you please add a link here? That makes it easy to navigate when rendered.",
      "range": {
        "startLine": 67,
        "startChar": 10,
        "endLine": 67,
        "endChar": 29
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69b38a10_b6d9737e",
        "filename": "README.md",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9855d33_13251e59",
      "range": {
        "startLine": 67,
        "startChar": 10,
        "endLine": 67,
        "endChar": 29
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f12f5e3b_1973f849",
        "filename": "README.md",
        "patchSetId": 6
      },
      "lineNbr": 77,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "I\u0027d recommend using socat\u0027s `link` argument for the `pty` type, as it means that we don\u0027t have to parse the socat output for the PTY numbers. I wrote about that a bit here:\n\nhttps://amboar.github.io/notes/2023/05/02/testing-obmc-console-with-socat.html",
      "range": {
        "startLine": 77,
        "startChar": 14,
        "endLine": 77,
        "endChar": 28
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5210840e_f6933519",
        "filename": "README.md",
        "patchSetId": 6
      },
      "lineNbr": 77,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Yes this is better üëç",
      "parentUuid": "f12f5e3b_1973f849",
      "range": {
        "startLine": 77,
        "startChar": 14,
        "endLine": 77,
        "endChar": 28
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0408e11_3570b115",
        "filename": "README.md",
        "patchSetId": 6
      },
      "lineNbr": 79,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "If we use the `link` argument then we can elide this output in the example. I think it\u0027s a little confusing for those just reading through without invoking `socat` themselves.",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 79,
        "endChar": 19
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "208168cd_91e70660",
        "filename": "README.md",
        "patchSetId": 6
      },
      "lineNbr": 79,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Thanks üëç, i did not know of this option.\nUsing \u0027link\u0027 will be better for creating any scripts.",
      "parentUuid": "c0408e11_3570b115",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 79,
        "endChar": 19
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcec054a_c2fe2098",
        "filename": "README.md",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "I think we were aiming for all muxed consoles to be managed through the one process (to map to the one TTY device). Does this bit of the documentation need an update to reflect that?",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 83,
        "endChar": 1
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5818c4c8_87493f0d",
        "filename": "README.md",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Yes, i can update it.\n\nIt\u0027s unrelated to any mux setup, it should just show how to do basic development on this repo, as is already described in your blog posts.",
      "parentUuid": "fcec054a_c2fe2098",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 83,
        "endChar": 1
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "493eb96b_a9444d1e",
        "filename": "README.md",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-13T02:57:39Z",
      "side": 1,
      "message": "\u003e It\u0027s unrelated to any mux setup\n\nWell, I don\u0027t think that\u0027s true? Why would we need multiple processes? If there\u0027s no mux there should only be one process, and I thought we were shooting for managing the UART mux in one process, not one process per mux leg?",
      "parentUuid": "5818c4c8_87493f0d",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 83,
        "endChar": 1
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e086a7a_a6a9c6f3",
        "filename": "README.md",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-13T08:51:28Z",
      "side": 1,
      "message": "In the latest revision of README.md there is only one obmc-console-server in the section \"Sample Development Setup\".",
      "parentUuid": "493eb96b_a9444d1e",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 83,
        "endChar": 1
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "314ba6c2_4ec3bf4c",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 6,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "Sorry, I should have been more careful about making the diagram align with the text. Can you fix that?",
      "range": {
        "startLine": 6,
        "startChar": 30,
        "endLine": 6,
        "endChar": 72
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6317253_c763a83a",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 6,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "314ba6c2_4ec3bf4c",
      "range": {
        "startLine": 6,
        "startChar": 30,
        "endLine": 6,
        "endChar": 72
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "317aacb7_fa0c84fc",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "I think you need to unpack why it can be represented in static configuration files then? Or are they not static (are we symlinking them and restarting obmc-console-server)?\n\nI assume the mux is always present. Is that the case?",
      "range": {
        "startLine": 15,
        "startChar": 11,
        "endLine": 16,
        "endChar": 60
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ba79b95_44990ae7",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "When the blade is present, the configuration file can be used.\n\nWhen the blade is removed, the console-server can be stopped, or not stopped, depending on how people want to use it. It is not relevant for this implementation.\n\nIt will probably not break anything when the service is not stopped.\n\nThe stopping of the service and detection of blade removal is out of scope for this patch series.\n\nFrom my understanding, devicetree represents static hardware. So representing this in devicetree would be a misrepresentation of the system. Devicetree cannot be \u0027stopped\u0027 like some obmc-console-server systemd service.\n\nThe mux could be on the blade or the bmc board, i assume it would be on the blade, but not 100% sure. It might not be relevant for the implementation.",
      "parentUuid": "317aacb7_fa0c84fc",
      "range": {
        "startLine": 15,
        "startChar": 11,
        "endLine": 16,
        "endChar": 60
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6da6e7e0_c8ee6252",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-13T02:57:39Z",
      "side": 1,
      "message": "\u003e When the blade is removed, the console-server can be stopped, or not stopped, depending on how people want to use it. It is not relevant for this implementation.\n\n\u003e The mux could be on the blade or the bmc board, i assume it would be on the blade, but not 100% sure. It might not be relevant for the implementation.\n\nIf the mux is on the blade and the blade is removed at some point, then we can\u0027t sensibly continue with a mux-based configuration of obmc-console-server, right?",
      "parentUuid": "2ba79b95_44990ae7",
      "range": {
        "startLine": 15,
        "startChar": 11,
        "endLine": 16,
        "endChar": 60
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a7c2a8d_2bebdfc7",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-13T08:51:28Z",
      "side": 1,
      "message": "I literally cannot understand this comment.",
      "parentUuid": "6da6e7e0_c8ee6252",
      "range": {
        "startLine": 15,
        "startChar": 11,
        "endLine": 16,
        "endChar": 60
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3874589b_467d0acb",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-14T04:47:46Z",
      "side": 1,
      "message": "If you cannot understand the comment I\u0027d prefer you ask questions to clarify and not just mark it as resolved.\n\nI\u0027m trying to understand what the requirements and constraints are that you\u0027re working with, and what you\u0027re proposing the behavior of obmc-console-server should be. I was concerned about a what I thought was a conflict and was asking you to help me understand.\n\nTo be clear, I\u0027m not trying to suggest you should be representing blades in the (static) devicetree. But I\u0027m also concerned that an obmc-console configuration file, given it is also static, isn\u0027t actually doing us a proper service given the pluggable nature of blades.\n\nWhat are you proposing is exposed by obmc-console-server if one of the blades it is configured for is removed? Or if the mux is on the blade that is removed, then what? Do we continue exposing all the \"consoles\" even though all the hardware under obmc-console-server is not connected?\n\nIt\u0027s fine if the answer is \"yes\", it\u0027s just not clear to me what we _want_ to happen.",
      "parentUuid": "0a7c2a8d_2bebdfc7",
      "range": {
        "startLine": 15,
        "startChar": 11,
        "endLine": 16,
        "endChar": 60
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e3bbb8f_551e0eb6",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "Can you please document the relevant configuration file properties here as well, so people know *how* to configure the behaviour?",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a369969_1e4eeb67",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Yes, i added the configuration example to the markdown, and removed it from the examples folder.\n\nMaybe it\u0027s better to have the docs and example close together. Then when one is updated the other one is not so easily overlooked.",
      "parentUuid": "7e3bbb8f_551e0eb6",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7ea39f4_2b5283f0",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-13T02:57:39Z",
      "side": 1,
      "message": "Thanks.",
      "parentUuid": "0a369969_1e4eeb67",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "756f0abe_5ebe8d66",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T02:07:17Z",
      "side": 1,
      "message": "Can we unpack here what is printed and why that\u0027s necessary?\n\nAlso, do you anticipate closing the client connections after deactivation? If so, why, and if not, why not?\n\nI haven\u0027t checked your current implementation because I\u0027d prefer to get the documentation right first, but I think there\u0027s an opportunity to expose multiple Unix domain sockets, one for each muxed console. That way we would never have to disconnect anyone, rather we would only route data to connections from the active socket (and not to connections from the non-active sockets).",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e301398_b435bb76",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "What\u0027s printed is the implementation detail.\n\nI would not want to document it as it could change over time and is not meant to be consumed by software. It is just for whoever reads that log.\n\nThe print would include a timestamp and indication of connected/disconnected.\n\nThe current implementation should not disconnect anyone. Whatever is read from the uart is routed to the active console.\n\nDisconnecting clients seemed too violent for me. Also there is no mechanism to tell them they should reconnect.",
      "parentUuid": "756f0abe_5ebe8d66",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b68c716_dc3fbc99",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-13T02:57:39Z",
      "side": 1,
      "message": "\u003e What\u0027s printed is the implementation detail.\n\nI don\u0027t think it is. It effectively forms an ABI, as it\u0027s a behaviour visible to clients. People will end up grepping for the connect/disconnect string. If it\u0027s an implementation detail it can change without concern, but given the circumstance, if it changes, it will break the grep. So I don\u0027t think it\u0027s an implementation detail.\n\n\u003e I would not want to document it as it could change over time and is not meant to be consumed by software. It is just for whoever reads that log.\n\nSo I guess that\u0027s my point of disagreement.\n\n\u003e The current implementation should not disconnect anyone. Whatever is read from the uart is routed to the active console.\n\nOkay. I think that\u0027s reasonable. I was poking at this to understand the plan with the unix domain socket(s) exposed by the server. So we\u0027re still planning to have one per (muxed) console with no disconnection, as opposed to one per TTY device and disconnecting clients on switching the mux. Or are we considering a third option?",
      "parentUuid": "2e301398_b435bb76",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fc8fe11_751cd71a",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-13T08:51:28Z",
      "side": 1,
      "message": "There is no consideration for any grep. It\u0027s not intended for people to build applications based on it.\n\nThat\u0027s precisely why i did not document the exact string or format, since that would indicate that there was some kind of interface.\n\nNot everything in life has to follow some specification and be documented. Sometimes there is implementation details.\n\n\nOn top of that, specifying some kind of string format would mean that anything connected to the upstream UART could also print that string, effectively bamboozeling any log consumer into thinking that it\u0027s e.g. disconnected when it was just whatever is on the other side of that UART, printing some string.\n\nOne would wonder what kind of things could happen if then there was indeed log output afterwards. Maybe that application would then \u0027forget\u0027 these logs\nuntil some type of \u0027console has been connected\u0027 string appears again.\n\nExample 1:\nSystem A - uart - mux - console-server - log file - Application B\n\n1. System A prints \u0027disconnected\u0027 type string, from some random application (malicious or accidental)\n2. Application B thinks the console is disconnected, pauses logging\n3. Important event happens in System A, logs are printed to uart\n4. Application B discards these logs, as it thinks the console is in disconnected state\n5. People are sad and realize that any random app can print any string and this does not constitute reliable info on connected/disconnected state.\n6. People stop relying on undocumented behavior that\u0027s most definitely not intended  to form some kind of interface\n\n\nIf there is an actual need to have some structured data on the precise times the mux was switched and any console was connected/disconnected,\nthis should better be exposed via some separate interface, like additional dbus methods and properties.\n\nThat would be out of scope for this patch series.",
      "parentUuid": "5b68c716_dc3fbc99",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87c8e1b5_1904a269",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-14T04:47:46Z",
      "side": 1,
      "message": "\u003e There is no consideration for any grep. It\u0027s not intended for people to build applications based on it.\n\u003e\n\u003e That\u0027s precisely why i did not document the exact string or format, since that would indicate that there was some kind of interface.\n\u003e \n\u003e Not everything in life has to follow some specification and be documented. Sometimes there is implementation details.\n\nIn my mind an implementation detail is a detail that\u0027s not visible to the user, usually hidden behind an abstraction. Injecting data into the stream that was not sent by the other side of the console isn\u0027t that. Just because you choose to believe that it\u0027s an implementation detail that doesn\u0027t make it so.\n\nHowever, I appreciate that this is all quite tempting.\n\nI\u0027m interested in Jeremy\u0027s input here.",
      "parentUuid": "9fc8fe11_751cd71a",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19e61f01_e2dd64ca",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T02:07:17Z",
      "side": 1,
      "message": "What is printed? And why?",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7557b954_75ee107e",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "The print is good for logging purposes. Any client or log file should have that information. \n\nOtherwise it would get very confusing for someone reading the logs when there\u0027s a chunk missing from the host boot logs since someone switched the mux to BIC UART or something else.\n\nIt should be transparent to readers of the log and any clients that they have been connected/disconnected. If the console is disconnected, it will be helpful to have that fact as the first thing in the log file. \n\nOtherwise people will wonder \"where is all the logs, the software must be broken!\".\n\nAs to what\u0027s printed that\u0027s implementation detail.",
      "parentUuid": "19e61f01_e2dd64ca",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9389eb8e_500f206f",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-13T02:57:39Z",
      "side": 1,
      "message": "\u003e As to what\u0027s printed that\u0027s implementation detail.\n\nSee the discussion above.",
      "parentUuid": "7557b954_75ee107e",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "118e4d68_62857e98",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-13T08:51:28Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9389eb8e_500f206f",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1a05825_932d682d",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "Can we do something to demonstrate multiple bus connections owned by the one process? I think I suggested `busctl list` output last time (ideally trimmed to only the relevant bits using `grep` or something).",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6586ad2f_fcd35116",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "c1a05825_932d682d",
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0157af4_ea610040",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "This needs consistency with the busctl output above. Either we use `console1` for both, or `host1` for both.",
      "range": {
        "startLine": 82,
        "startChar": 57,
        "endLine": 82,
        "endChar": 62
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3ebaac9_7880cb3d",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0157af4_ea610040",
      "range": {
        "startLine": 82,
        "startChar": 57,
        "endLine": 82,
        "endChar": 62
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb909481_44cfbe0f",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "Again here.",
      "range": {
        "startLine": 93,
        "startChar": 30,
        "endLine": 93,
        "endChar": 35
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d9273f4_d216f1fc",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb909481_44cfbe0f",
      "range": {
        "startLine": 93,
        "startChar": 30,
        "endLine": 93,
        "endChar": 35
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de790114_a4406a34",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 99,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "Also here.",
      "range": {
        "startLine": 99,
        "startChar": 30,
        "endLine": 99,
        "endChar": 35
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92509e71_a793ef3c",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 99,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de790114_a4406a34",
      "range": {
        "startLine": 99,
        "startChar": 30,
        "endLine": 99,
        "endChar": 35
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "176c6a4d_e0fa3448",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 111,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-12T00:56:29Z",
      "side": 1,
      "message": "And here.",
      "range": {
        "startLine": 111,
        "startChar": 57,
        "endLine": 111,
        "endChar": 62
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b90d9af_6f60144a",
        "filename": "docs/mux-support.md",
        "patchSetId": 6
      },
      "lineNbr": 111,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-12T11:00:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "176c6a4d_e0fa3448",
      "range": {
        "startLine": 111,
        "startChar": 57,
        "endLine": 111,
        "endChar": 62
      },
      "revId": "a3d6040903c98d4d1cc84bb4c96af0ae84b05da0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}