{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9f10c6b7_d58bd29e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2023-09-13T09:46:50Z",
      "side": 1,
      "message": "LGTM! Just a (resolved) comment, more of a note to myself.",
      "revId": "acefe010e0b48193c2f3d44b71f83e917259f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "144b226c_8749d944",
        "filename": "config.c",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2023-09-13T09:46:50Z",
      "side": 1,
      "message": "(not so much a review, but more me thinking out loud) \n\nEnsuring that we can\u0027t walk past the beginning of value here: we know that `value` must contain at least one non-space char (and that the test used in `sscanf` is identical to the `isspace` test, as per the sscanf docs), due to the space directive after the `\u003d` in the sscanf.\n\nGiven there is at least one non-space between `end` and `value`, this loop cannot access `value` (or prior).",
      "revId": "acefe010e0b48193c2f3d44b71f83e917259f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}