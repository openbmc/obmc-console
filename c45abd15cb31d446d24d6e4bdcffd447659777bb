{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "844f495f_b4c48482",
        "filename": "console-client.c",
        "patchSetId": 26
      },
      "lineNbr": 36,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "This should be `static volatile sig_atomic_t sigint \u003d ...;`, otherwise the behaviour is unspecified by the C standard.",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97ad40eb_c782cebf",
        "filename": "console-client.c",
        "patchSetId": 26
      },
      "lineNbr": 36,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-07-02T17:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "844f495f_b4c48482",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "feb851a7_2078ea1b",
        "filename": "console-client.c",
        "patchSetId": 26
      },
      "lineNbr": 360,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "[man 2 signal](https://man7.org/linux/man-pages/man2/signal.2.html#DESCRIPTION) says at the top of `DESCRIPTION`:\n\n```\n       WARNING: the behavior of signal() varies across UNIX versions,\n       and has also varied historically across different versions of\n       Linux.  Avoid its use: use sigaction(2) instead.  See Portability\n       below.\n```\n\nWe should probably avoid well-documented booby-trapped library calls...",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd4ce543_a45e0d33",
        "filename": "console-client.c",
        "patchSetId": 26
      },
      "lineNbr": 360,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-07-02T17:03:00Z",
      "side": 1,
      "message": "I mainly added this for tests. So the test can send a SIGINT to the console process and the process can shutdown cleanly without leaking any resources.\n\nBut i can look into into sigaction for the next revisions.",
      "parentUuid": "feb851a7_2078ea1b",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef2a8480_52294333",
        "filename": "console-client.c",
        "patchSetId": 26
      },
      "lineNbr": 360,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-03T03:22:00Z",
      "side": 1,
      "message": "Right, but the code isn\u0027t compiled out for non-test environments :)\n\nAlso, see Jeremy\u0027s comment above about making this a separate commit.",
      "parentUuid": "fd4ce543_a45e0d33",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "395c9cef_94ac0918",
        "filename": "console-dbus.c",
        "patchSetId": 26
      },
      "lineNbr": 39,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "By the consensus on [Add designs/uart-mux-support.md](https://gerrit.openbmc.org/c/openbmc/docs/+/72125) this isn\u0027t (yet) necessary. If we need it, it should be a separate patch that follows this one (... sometime in the future).",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7706e0df_bff9457c",
        "filename": "console-dbus.c",
        "patchSetId": 26
      },
      "lineNbr": 39,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-28T15:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "395c9cef_94ac0918",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "580fd788_defb08b8",
        "filename": "console-dbus.c",
        "patchSetId": 26
      },
      "lineNbr": 174,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "Please no, let\u0027s leave bus fiddling to [dbus-run-session](https://manpages.debian.org/bookworm/dbus-daemon/dbus-run-session.1.en.html) and the environment. If we must access the system bus then it\u0027s relatively straight forward to make the relevant environment variables match. See how I\u0027ve hooked things up for testing here:\n\nhttps://github.com/amboar/dbus-sensors/commit/deef99485d7671634baee09aac6368b8b839b574#diff-9cd49426232fe1cd89c98e67825def7724c31956a4e55ad5eabc84f466f05e32R14",
      "range": {
        "startLine": 174,
        "startChar": 52,
        "endLine": 174,
        "endChar": 66
      },
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "614a7a53_1a4aff8b",
        "filename": "console-dbus.c",
        "patchSetId": 26
      },
      "lineNbr": 174,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-28T15:33:57Z",
      "side": 1,
      "message": "Thanks for pointing this out üëç I can remove the edge case here and try to apply dbus-run-session in the testing patch.",
      "parentUuid": "580fd788_defb08b8",
      "range": {
        "startLine": 174,
        "startChar": 52,
        "endLine": 174,
        "endChar": 66
      },
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc714970_a242e5d8",
        "filename": "console-gpio.c",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "I think we agreed that rather than `mux-gpio-N`, we\u0027d define `mux-gpios` as a list, and then use `mux-index` as a scalar value over the LSB-MSB ordered `mux-gpios` to set the mux state.",
      "range": {
        "startLine": 18,
        "startChar": 1,
        "endLine": 19,
        "endChar": 49
      },
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea169fa5_a91f4b6f",
        "filename": "console-gpio.c",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-27T13:55:06Z",
      "side": 1,
      "message": "Yes, this is just leftovers. Will clean that up in the next revisions üëç",
      "parentUuid": "dc714970_a242e5d8",
      "range": {
        "startLine": 18,
        "startChar": 1,
        "endLine": 19,
        "endChar": 49
      },
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d208ec5_52904208",
        "filename": "console-gpio.c",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-27T15:06:29Z",
      "side": 1,
      "message": "fixed this in latest revision üëç\n\nThere are now 3 helper functions to access the gpio configuration.",
      "parentUuid": "ea169fa5_a91f4b6f",
      "range": {
        "startLine": 18,
        "startChar": 1,
        "endLine": 19,
        "endChar": 49
      },
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a2b3225_d78af645",
        "filename": "console-gpio.c",
        "patchSetId": 26
      },
      "lineNbr": 200,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "I prefer this have a more descriptive name if it\u0027s not `static`.",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6ad91eb_cb93f7a0",
        "filename": "console-gpio.c",
        "patchSetId": 26
      },
      "lineNbr": 200,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-28T15:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a2b3225_d78af645",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "299db3b2_afdf56a6",
        "filename": "console-gpio.h",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "So my concern with the declarations in this header is that they are hard to relate to each other even now, let alone when separated out in the code, and don\u0027t seem to represent a coherent object model. Everything takes `struct console *` as its context; why not define the lot in `console-server.h`?\n\nA while back I wrote a post about naming things in C and trying to maintain coherence in the few namespaces that C has. I\u0027d certainly feel more at home with the patch if it followed the strategy outlined a bit more closely:\n\nhttps://amboar.github.io/notes/2023/06/09/naming-functions-in-c.html",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "908b2313_cd2636d4",
        "filename": "console-gpio.h",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-07-02T17:03:00Z",
      "side": 1,
      "message": "Agree that there could be more consistency here. I can rename the functions in the header to have common ```console_gpio_``` prefix.\n\nMy intent with this file is to separate all the console specific code that deals with the libgpio. I did not want to have any libgpio code in the console-server.c\n\nWhile looking at that, also noticed 3 functions here can be made static\n- console_gpio_request_lines (formerly set_console_gpios)\n- console_gpio_release_lines (formerly release_console_gpios)\n- console_gpio_print_timestamped (formerly console_print_timestamped)",
      "parentUuid": "299db3b2_afdf56a6",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c20e683_e9f37479",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 66,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "I think we\u0027ve eliminated this idea, yes?",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60a99ebc_e3156242",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 66,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-27T13:55:06Z",
      "side": 1,
      "message": "yes, removed it it latest revision.",
      "parentUuid": "1c20e683_e9f37479",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "803fc988_c0a1da27",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 68,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "Can we extract the debug/verbose mode support out to a separate patch? Seems like that should be one small straight-forward step to reducing the complexity of this change.\n\nIt will also help isolate the discussion about how we can make writing debug statements a bit more ergonomic.",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1a9abcd_3be2de77",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 68,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-28T15:33:57Z",
      "side": 1,
      "message": "Yes. it was kind of leftovers from my implementation. I found it very helpful during development but we can re-introduce it after the feature patch has stabilized.",
      "parentUuid": "803fc988_c0a1da27",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "886e7ce5_71773d5e",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 975,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "We iterate here over `n_consoles`, and then we iterate on 1041 over `n_consoles`, and again on 1057 over `n_consoles`. This feels like the abstraction is wrong? Can we have these functions operate on one specific console, and hoist the iteration to a higher level? As in, I think these functions could take a `struct console *` instead. Or is there some reason I\u0027m missing that we need to do everything in column-major order?",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8375c31e_2d5a7b62",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 975,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-28T15:33:57Z",
      "side": 1,
      "message": "Yes, the abstraction is wrong. Either we should keep the order as done before\nor run a function for each console.\n\nI did not want to mess with the order that was there before,\nand would prefer to have a function for each of the tasks that then iterates over the consoles.\n\nThat way we can avoid the edge case of the tty pollfd in the active console.\n\nSo like\n\n- console_server_check_ringbuffer_sizes\n- console_server_process_dbus\n- console_server_process_pollers\n\nin latest revision",
      "parentUuid": "886e7ce5_71773d5e",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a48c666d_d89d5b4b",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 975,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-02T02:02:10Z",
      "side": 1,
      "message": "The order in which these file descriptors are processed is (largely?) an implementation detail. I don\u0027t think we should be afraid to reorganise it, especially if it supports sensible abstractions.\n\nI prefer you don\u0027t do what you\u0027ve done here, and instead have an event processing function per console. If there\u0027s a special-case for the active console, then add the logic for that special-case.\n\nI really prefer we hoist the iteration such there\u0027s only one loop driving it over the N consoles.",
      "parentUuid": "8375c31e_2d5a7b62",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd91cf95_7ad151d4",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 975,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-07-02T17:03:00Z",
      "side": 1,
      "message": "Hoisted the iteration in the newest revision.",
      "parentUuid": "a48c666d_d89d5b4b",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13490865_edadaa93",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 1097,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "We can drop this?",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4951f236_885e0a81",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 1097,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-27T13:55:06Z",
      "side": 1,
      "message": "dropped üëç",
      "parentUuid": "13490865_edadaa93",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5982ff43_99fe4115",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 1517,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T12:40:08Z",
      "side": 1,
      "message": "Please remove this. See the other comment about `dbus-run-session`.",
      "range": {
        "startLine": 1517,
        "startChar": 46,
        "endLine": 1517,
        "endChar": 59
      },
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d23ce1ab_6666768f",
        "filename": "console-server.c",
        "patchSetId": 26
      },
      "lineNbr": 1517,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-06-28T15:33:57Z",
      "side": 1,
      "message": "Using dbus-run-session now, you reference was very helpful.\nI did not know of it before. But i did not manage to get it working with a script only. Had to use execve since there was some problems with libasan.\n\nI could not resolve that so now the test does execve with dbus-run-session\nand then passes it\u0027s own path inside that call along with a parameter that stops the recursion. But we can discuss that on the testing path üëç",
      "parentUuid": "5982ff43_99fe4115",
      "range": {
        "startLine": 1517,
        "startChar": 46,
        "endLine": 1517,
        "endChar": 59
      },
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a40ba7e_de7343bc",
        "filename": "meson.build",
        "patchSetId": 26
      },
      "lineNbr": 73,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-25T04:30:42Z",
      "side": 1,
      "message": "Do you mind running `mkdir subprojects \u0026\u0026 meson wrap install libgpiod` and committing the wrap file? That way meson will automatically fall-back to the subproject if the libgpiod development files aren\u0027t available on the build system.",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd84b431_ec2f4a40",
        "filename": "meson.build",
        "patchSetId": 26
      },
      "lineNbr": 73,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-25T07:17:17Z",
      "side": 1,
      "message": "Actually, give it a bit, I\u0027m sorting out a PR for libgpiod to address an issue in the wrap and also to bump it to v1.6.5.",
      "parentUuid": "3a40ba7e_de7343bc",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5423a5ec_687c68c3",
        "filename": "meson.build",
        "patchSetId": 26
      },
      "lineNbr": 73,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-27T01:57:41Z",
      "side": 1,
      "message": "Okay, this is now sorted out; `meson wrap update-db \u0026\u0026 meson wrap install libgpiod` should now give a setup that builds properly (using v1.6.5).",
      "parentUuid": "bd84b431_ec2f4a40",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96111ec8_5900d0f9",
        "filename": "meson.build",
        "patchSetId": 26
      },
      "lineNbr": 73,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-07-02T17:03:00Z",
      "side": 1,
      "message": "Added the wrap file in the newest revision. Thanks for these instructions üëç",
      "parentUuid": "5423a5ec_687c68c3",
      "revId": "c45abd15cb31d446d24d6e4bdcffd447659777bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}